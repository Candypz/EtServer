// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameMessage.proto

#include "GameMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class CMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessage>
      _instance;
} _CMessage_default_instance_;
class CRegistration_ReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CRegistration_Req>
      _instance;
} _CRegistration_Req_default_instance_;
class CRegistration_ResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CRegistration_Res>
      _instance;
} _CRegistration_Res_default_instance_;
namespace protobuf_GameMessage_2eproto {
void InitDefaultsCMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMessage_default_instance_;
    new (ptr) ::CMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMessage::InitAsDefaultInstance();
}

void InitDefaultsCMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageImpl);
}

void InitDefaultsCRegistration_ReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CRegistration_Req_default_instance_;
    new (ptr) ::CRegistration_Req();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CRegistration_Req::InitAsDefaultInstance();
}

void InitDefaultsCRegistration_Req() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCRegistration_ReqImpl);
}

void InitDefaultsCRegistration_ResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CRegistration_Res_default_instance_;
    new (ptr) ::CRegistration_Res();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CRegistration_Res::InitAsDefaultInstance();
}

void InitDefaultsCRegistration_Res() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCRegistration_ResImpl);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMessage, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMessage, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMessage, sn_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CRegistration_Req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CRegistration_Req, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CRegistration_Req, password_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CRegistration_Res, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CRegistration_Res, error_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CRegistration_Res, server_tiem_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::CMessage)},
  { 8, -1, sizeof(::CRegistration_Req)},
  { 15, -1, sizeof(::CRegistration_Res)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CRegistration_Req_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CRegistration_Res_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "GameMessage.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021GameMessage.proto\"4\n\010CMessage\022\017\n\007conte"
      "nt\030\001 \001(\014\022\013\n\003cmd\030\002 \001(\005\022\n\n\002sn\030\003 \001(\005\"6\n\021CRe"
      "gistration_Req\022\017\n\007account\030\001 \001(\005\022\020\n\010passw"
      "ord\030\002 \001(\014\"<\n\021CRegistration_Res\022\022\n\nerror_"
      "code\030\001 \001(\005\022\023\n\013server_tiem\030\002 \001(\003b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 199);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GameMessage.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_GameMessage_2eproto

// ===================================================================

void CMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessage::kContentFieldNumber;
const int CMessage::kCmdFieldNumber;
const int CMessage::kSnFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessage::CMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsCMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMessage)
}
CMessage::CMessage(const CMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  ::memcpy(&cmd_, &from.cmd_,
    static_cast<size_t>(reinterpret_cast<char*>(&sn_) -
    reinterpret_cast<char*>(&cmd_)) + sizeof(sn_));
  // @@protoc_insertion_point(copy_constructor:CMessage)
}

void CMessage::SharedCtor() {
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cmd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sn_) -
      reinterpret_cast<char*>(&cmd_)) + sizeof(sn_));
  _cached_size_ = 0;
}

CMessage::~CMessage() {
  // @@protoc_insertion_point(destructor:CMessage)
  SharedDtor();
}

void CMessage::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessage::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessage& CMessage::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsCMessage();
  return *internal_default_instance();
}

CMessage* CMessage::New(::google::protobuf::Arena* arena) const {
  CMessage* n = new CMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:CMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cmd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sn_) -
      reinterpret_cast<char*>(&cmd_)) + sizeof(sn_));
  _internal_metadata_.Clear();
}

bool CMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes content = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cmd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sn = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMessage)
  return false;
#undef DO_
}

void CMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->content(), output);
  }

  // int32 cmd = 2;
  if (this->cmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cmd(), output);
  }

  // int32 sn = 3;
  if (this->sn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->sn(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CMessage)
}

::google::protobuf::uint8* CMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes content = 1;
  if (this->content().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->content(), target);
  }

  // int32 cmd = 2;
  if (this->cmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cmd(), target);
  }

  // int32 sn = 3;
  if (this->sn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->sn(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMessage)
  return target;
}

size_t CMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes content = 1;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content());
  }

  // int32 cmd = 2;
  if (this->cmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cmd());
  }

  // int32 sn = 3;
  if (this->sn() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sn());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMessage)
    MergeFrom(*source);
  }
}

void CMessage::MergeFrom(const CMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.cmd() != 0) {
    set_cmd(from.cmd());
  }
  if (from.sn() != 0) {
    set_sn(from.sn());
  }
}

void CMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessage::CopyFrom(const CMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessage::IsInitialized() const {
  return true;
}

void CMessage::Swap(CMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessage::InternalSwap(CMessage* other) {
  using std::swap;
  content_.Swap(&other->content_);
  swap(cmd_, other->cmd_);
  swap(sn_, other->sn_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessage::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CRegistration_Req::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CRegistration_Req::kAccountFieldNumber;
const int CRegistration_Req::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CRegistration_Req::CRegistration_Req()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsCRegistration_Req();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CRegistration_Req)
}
CRegistration_Req::CRegistration_Req(const CRegistration_Req& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  account_ = from.account_;
  // @@protoc_insertion_point(copy_constructor:CRegistration_Req)
}

void CRegistration_Req::SharedCtor() {
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_ = 0;
  _cached_size_ = 0;
}

CRegistration_Req::~CRegistration_Req() {
  // @@protoc_insertion_point(destructor:CRegistration_Req)
  SharedDtor();
}

void CRegistration_Req::SharedDtor() {
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CRegistration_Req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CRegistration_Req::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CRegistration_Req& CRegistration_Req::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsCRegistration_Req();
  return *internal_default_instance();
}

CRegistration_Req* CRegistration_Req::New(::google::protobuf::Arena* arena) const {
  CRegistration_Req* n = new CRegistration_Req;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CRegistration_Req::Clear() {
// @@protoc_insertion_point(message_clear_start:CRegistration_Req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_ = 0;
  _internal_metadata_.Clear();
}

bool CRegistration_Req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CRegistration_Req)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &account_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_password()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CRegistration_Req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CRegistration_Req)
  return false;
#undef DO_
}

void CRegistration_Req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CRegistration_Req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 account = 1;
  if (this->account() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->account(), output);
  }

  // bytes password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->password(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CRegistration_Req)
}

::google::protobuf::uint8* CRegistration_Req::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CRegistration_Req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 account = 1;
  if (this->account() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->account(), target);
  }

  // bytes password = 2;
  if (this->password().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->password(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRegistration_Req)
  return target;
}

size_t CRegistration_Req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRegistration_Req)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->password());
  }

  // int32 account = 1;
  if (this->account() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->account());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CRegistration_Req::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CRegistration_Req)
  GOOGLE_DCHECK_NE(&from, this);
  const CRegistration_Req* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CRegistration_Req>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CRegistration_Req)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CRegistration_Req)
    MergeFrom(*source);
  }
}

void CRegistration_Req::MergeFrom(const CRegistration_Req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CRegistration_Req)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.account() != 0) {
    set_account(from.account());
  }
}

void CRegistration_Req::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CRegistration_Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CRegistration_Req::CopyFrom(const CRegistration_Req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRegistration_Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CRegistration_Req::IsInitialized() const {
  return true;
}

void CRegistration_Req::Swap(CRegistration_Req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CRegistration_Req::InternalSwap(CRegistration_Req* other) {
  using std::swap;
  password_.Swap(&other->password_);
  swap(account_, other->account_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CRegistration_Req::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CRegistration_Res::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CRegistration_Res::kErrorCodeFieldNumber;
const int CRegistration_Res::kServerTiemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CRegistration_Res::CRegistration_Res()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsCRegistration_Res();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CRegistration_Res)
}
CRegistration_Res::CRegistration_Res(const CRegistration_Res& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&server_tiem_, &from.server_tiem_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_code_) -
    reinterpret_cast<char*>(&server_tiem_)) + sizeof(error_code_));
  // @@protoc_insertion_point(copy_constructor:CRegistration_Res)
}

void CRegistration_Res::SharedCtor() {
  ::memset(&server_tiem_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_code_) -
      reinterpret_cast<char*>(&server_tiem_)) + sizeof(error_code_));
  _cached_size_ = 0;
}

CRegistration_Res::~CRegistration_Res() {
  // @@protoc_insertion_point(destructor:CRegistration_Res)
  SharedDtor();
}

void CRegistration_Res::SharedDtor() {
}

void CRegistration_Res::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CRegistration_Res::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CRegistration_Res& CRegistration_Res::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsCRegistration_Res();
  return *internal_default_instance();
}

CRegistration_Res* CRegistration_Res::New(::google::protobuf::Arena* arena) const {
  CRegistration_Res* n = new CRegistration_Res;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CRegistration_Res::Clear() {
// @@protoc_insertion_point(message_clear_start:CRegistration_Res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&server_tiem_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_code_) -
      reinterpret_cast<char*>(&server_tiem_)) + sizeof(error_code_));
  _internal_metadata_.Clear();
}

bool CRegistration_Res::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CRegistration_Res)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 server_tiem = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &server_tiem_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CRegistration_Res)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CRegistration_Res)
  return false;
#undef DO_
}

void CRegistration_Res::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CRegistration_Res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error_code = 1;
  if (this->error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error_code(), output);
  }

  // int64 server_tiem = 2;
  if (this->server_tiem() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->server_tiem(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CRegistration_Res)
}

::google::protobuf::uint8* CRegistration_Res::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CRegistration_Res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error_code = 1;
  if (this->error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error_code(), target);
  }

  // int64 server_tiem = 2;
  if (this->server_tiem() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->server_tiem(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRegistration_Res)
  return target;
}

size_t CRegistration_Res::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRegistration_Res)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 server_tiem = 2;
  if (this->server_tiem() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->server_tiem());
  }

  // int32 error_code = 1;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CRegistration_Res::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CRegistration_Res)
  GOOGLE_DCHECK_NE(&from, this);
  const CRegistration_Res* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CRegistration_Res>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CRegistration_Res)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CRegistration_Res)
    MergeFrom(*source);
  }
}

void CRegistration_Res::MergeFrom(const CRegistration_Res& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CRegistration_Res)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server_tiem() != 0) {
    set_server_tiem(from.server_tiem());
  }
  if (from.error_code() != 0) {
    set_error_code(from.error_code());
  }
}

void CRegistration_Res::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CRegistration_Res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CRegistration_Res::CopyFrom(const CRegistration_Res& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRegistration_Res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CRegistration_Res::IsInitialized() const {
  return true;
}

void CRegistration_Res::Swap(CRegistration_Res* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CRegistration_Res::InternalSwap(CRegistration_Res* other) {
  using std::swap;
  swap(server_tiem_, other->server_tiem_);
  swap(error_code_, other->error_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CRegistration_Res::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
